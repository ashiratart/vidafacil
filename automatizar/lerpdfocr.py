import pytesseract
from pdf2image import convert_from_path
import re

# Caminho do PDF
caminho_pdf = "automatizar/04-10.pdf"
nota_chave = "N¬∫ do Documento"

# Configura√ß√£o do Tesseract
tesseract_config = '--psm 6'  # Modo semi-estruturado
tesseract_lang = 'por'        # Idioma portugu√™s

def realizar_ocr_em_pdf(pdf_path):
    print(f"üîç Convertendo o PDF '{pdf_path}' em imagens para OCR...")
    imagens = convert_from_path(pdf_path)

    nota_encontrada = False

    for i, imagem in enumerate(imagens):
        print(f"\n--- P√°gina {i + 1} ---")
        texto = pytesseract.image_to_string(imagem, config=tesseract_config, lang=tesseract_lang)
        
        # Texto cont√≠nuo
        texto_continuo = " ".join(texto.split())

        if nota_chave.lower() in texto_continuo.lower():
            print(f"\n‚úÖ Campo '{nota_chave}' encontrado na p√°gina {i + 1}")

            # Regex tolerante a palavras no meio antes do n√∫mero
            padrao = re.search(
                rf"{re.escape(nota_chave)}(?:\s+\S+){{0,5}}?\s+(\d+)",
                texto_continuo,
                re.IGNORECASE
            )

            if padrao:
                numero_nota = padrao.group(1)
                print(f"üßæ N√∫mero da nota fiscal: {numero_nota}")
                nota_encontrada = True
                break
            else:
                print("‚ö†Ô∏è Campo encontrado, mas n√∫mero n√£o identificado.")
        else:
            print(f"‚ùå Campo '{nota_chave}' n√£o encontrado nesta p√°gina.")

    if not nota_encontrada:
        print("\n‚ùå Nenhuma nota fiscal encontrada no documento.")

# Executa o OCR
realizar_ocr_em_pdf(caminho_pdf)

